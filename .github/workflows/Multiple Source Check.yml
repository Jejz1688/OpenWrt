#===============================================
# Description: Multiple Source Check
# Lisence: MIT
# ByÔºöJejz
#===============================================

name: Multiple Source Check
 
on:
  workflow_dispatch:
  #schedule:
  #  - cron: 6 */2 * * * 
     
env:
  TZ: Asia/Shanghai

jobs:
  Checka:
    runs-on: ubuntu-latest
    env:
      REPO_URL_Lede: https://github.com/coolsnowwolf/lede
      REPO_BRANCH_Lede: master
      REPO_PATH_Lede: "lede"
    steps:
    - name: Get Commit Hash
      id: getHash
      run: |
        git clone --depth 1 $REPO_URL_Lede -b $REPO_BRANCH_Lede $REPO_PATH_Lede
        cd $REPO_PATH_Lede
        echo "commitHash_Lede=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        cd      
    - name: Show Commit Head and Combination Heads
      id: combHeader
      run: |
        echo "commitHash_Lede: ${{ steps.getHash.outputs.commitHash_Lede }}"    
    - name: Compare Commit Hash
      id: cacheHash
      uses: actions/cache@main
      with:
        path: .commitHash_Lede
        key: HEAD-${{ steps.getHash.outputs.commitHash_Lede }}
    - name: Save New Commit Hash
      if: steps.cacheHash.outputs.cache-hit != 'true'
      run: |
        echo ${{ steps.getHash.outputs.commitHash_Lede }} | tee .commitHash_Lede  
    - name: Telegram notification upload success
      if: steps.cacheHash.outputs.cache-hit != 'true'
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKENS }}
        message: |
          ‚ú®‡º∫Lede‡ºª‚ú®
                ‚óè Ê∫êÁ†ÅÊõ¥Êñ∞‰∫Ü
          ‚ú™ ‚ú£ ‚ú§ ‚ú• ‚ú¶ ‚ùâ ‚ù¶ ‚ùß ‚ùÉ ‚ùÇ ‚ùÅ ‚ùÄ
          üìçÔºöhttps://github.com/coolsnowwolf/lede
# /////////////////////////////////////////////////////////////////////////////////////////////////////////        
  Checkb:
    runs-on: ubuntu-latest
    env:
      REPO_URL_HelloWorld: https://github.com/fw876/helloworld
      REPO_BRANCH_HelloWorld: master
      REPO_PATH_HelloWorld: "helloworld"
    steps:
    - name: Get Commit Hash
      id: getHash
      run: |
        git clone --depth 1 $REPO_URL_HelloWorld -b $REPO_BRANCH_HelloWorld $REPO_PATH_HelloWorld 
        cd $REPO_PATH_HelloWorld
        echo "commitHash_HelloWorld=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        cd    
    - name: Show Commit Head and Combination Heads
      id: combHeader
      run: |
        echo "commitHash_HelloWorld: ${{ steps.getHash.outputs.commitHash_HelloWorld }}"   
    - name: Compare Commit Hash
      id: cacheHash
      uses: actions/cache@main
      with:
        path: .commitHash_HelloWorld
        key: HEAD-${{ steps.getHash.outputs.commitHash_HelloWorld }}
    - name: Save New Commit Hash
      if: steps.cacheHash.outputs.cache-hit != 'true'
      run: |
         echo ${{ steps.getHash.outputs.commitHash_HelloWorld }} | tee .commitHash_HelloWorld    
    - name: Telegram notification upload success
      if: steps.cacheHash.outputs.cache-hit != 'true'
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKENS }}
        message: |
          üöÄ HelloWorld
                ‚óè Ê∫êÁ†ÅÊõ¥Êñ∞‰∫Ü
          ‚ú™ ‚ú£ ‚ú§ ‚ú• ‚ú¶ ‚ùâ ‚ù¶ ‚ùß ‚ùÉ ‚ùÇ ‚ùÅ ‚ùÄ
          üìçÔºöhttps://github.com/fw876/helloworld/tree/${{ env.REPO_BRANCH_HelloWorld }}   
# /////////////////////////////////////////////////////////////////////////////////////////////////////////       
  Checkc:
    runs-on: ubuntu-latest
    env:
      REPO_URL_OpenClash: https://github.com/vernesong/OpenClash
      REPO_BRANCH_OpenClash: master
      REPO_PATH_OpenClash: "OpenClash"
    steps:
    - name: Get Commit Hash
      id: getHash
      run: |
        git clone --depth 1 $REPO_URL_OpenClash -b $REPO_BRANCH_OpenClash $REPO_PATH_OpenClash
        cd $REPO_PATH_OpenClash
        echo "commitHash_OpenClash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        cd  
    - name: Show Commit Head and Combination Heads
      id: combHeader
      run: |
        echo "commitHash_OpenClash: ${{ steps.getHash.outputs.commitHash_OpenClash }}"       
    - name: Compare Commit Hash
      id: cacheHash
      uses: actions/cache@main
      with:
        path: .commitHash_OpenClash
        key: HEAD-${{ steps.getHash.outputs.commitHash_OpenClash }}        
    - name: Save New Commit Hash
      if: steps.cacheHash.outputs.cache-hit != 'true'
      run: |
         echo ${{ steps.getHash.outputs.commitHash_OpenClash }} | tee .commitHash_OpenClash     
    - name: Telegram notification upload success
      if: steps.cacheHash.outputs.cache-hit != 'true'
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKENS }}
        message: |
          üöÄ OpenClash
                ‚óè Ê∫êÁ†ÅÊõ¥Êñ∞‰∫Ü
          ‚ú™ ‚ú£ ‚ú§ ‚ú• ‚ú¶ ‚ùâ ‚ù¶ ‚ùß ‚ùÉ ‚ùÇ ‚ùÅ ‚ùÄ
          üìçÔºöhttps://github.com/vernesong/OpenClash
# /////////////////////////////////////////////////////////////////////////////////////////////////////////       
  Checkd:
    runs-on: ubuntu-latest
    env:
      REPO_URL_PassWall: https://github.com/xiaorouji/openwrt-passwall
      REPO_BRANCH_PassWall: main
      REPO_PATH_PassWall: "PassWall"
    steps:
    - name: Get Commit Hash
      id: getHash
      run: |
        git clone --depth 1 $REPO_URL_PassWall -b $REPO_BRANCH_PassWall $REPO_PATH_PassWall
        cd $REPO_PATH_PassWall
        echo "commitHash_PassWall=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        cd  
    - name: Show Commit Head and Combination Heads
      id: combHeader
      run: |
        echo "commitHash_PassWall: ${{ steps.getHash.outputs.commitHash_PassWall }}"       
    - name: Compare Commit Hash
      id: cacheHash
      uses: actions/cache@main
      with:
        path: .commitHash_PassWall
        key: HEAD-${{ steps.getHash.outputs.commitHash_PassWall }}        
    - name: Save New Commit Hash
      if: steps.cacheHash.outputs.cache-hit != 'true'
      run: |
         echo ${{ steps.getHash.outputs.commitHash_PassWall }} | tee .commitHash_PassWall     
    - name: Telegram notification upload success
      if: steps.cacheHash.outputs.cache-hit != 'true'
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKENS }}
        message: |
          üöÄ PassWall
                ‚óè Ê∫êÁ†ÅÊõ¥Êñ∞‰∫Ü
          ‚ú™ ‚ú£ ‚ú§ ‚ú• ‚ú¶ ‚ùâ ‚ù¶ ‚ùß ‚ùÉ ‚ùÇ ‚ùÅ ‚ùÄ
          üìçÔºöhttps://github.com/xiaorouji/openwrt-passwall
          üìçÔºöhttps://github.com/xiaorouji/openwrt-passwall-packages
# //////////////////////////////////////////////////////////////////////////////////////////////
  Checke:
    runs-on: ubuntu-latest
    env:
      REPO_URL_Immo: https://github.com/immortalwrt/immortalwrt
      REPO_BRANCH_Immo: master
      REPO_PATH_Immo: "Immo"
    steps:
    - name: Get Commit Hash
      id: getHash
      run: |
        git clone --depth 1 $REPO_URL_Immo -b $REPO_BRANCH_Immo $REPO_PATH_Immo
        cd $REPO_PATH_Immo
        echo "commitHash_Immo=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        cd      
    - name: Show Commit Head and Combination Heads
      id: combHeader
      run: |
        echo "commitHash_Immo: ${{ steps.getHash.outputs.commitHash_Immo }}"    
    - name: Compare Commit Hash
      id: cacheHash
      uses: actions/cache@main
      with:
        path: .commitHash_Immo
        key: HEAD-${{ steps.getHash.outputs.commitHash_Immo }}
    - name: Save New Commit Hash
      if: steps.cacheHash.outputs.cache-hit != 'true'
      run: |
        echo ${{ steps.getHash.outputs.commitHash_Immo }} | tee .commitHash_Immo  
    - name: Telegram notification upload success
      if: steps.cacheHash.outputs.cache-hit != 'true'
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKENS }}
        message: |
          ‚ú®‡º∫ImmortalWrt‡ºª‚ú®
                ‚óè Ê∫êÁ†ÅÊõ¥Êñ∞‰∫Ü
          ‚ú™ ‚ú£ ‚ú§ ‚ú• ‚ú¶ ‚ùâ ‚ù¶ ‚ùß ‚ùÉ ‚ùÇ ‚ùÅ ‚ùÄ
          üìçÔºöhttps://github.com/immortalwrt/immortalwrt
# //////////////////////////////////////////////////////////////////////////////////////////////
  Checkf:
    runs-on: ubuntu-latest
    env:
      REPO_URL_op: https://github.com/openwrt/openwrt
      REPO_BRANCH_op: main
      REPO_PATH_op: "op"
    steps:
    - name: Get Commit Hash
      id: getHash
      run: |
        git clone --depth 1 $REPO_URL_op -b $REPO_BRANCH_op $REPO_PATH_op
        cd $REPO_PATH_op
        echo "commitHash_op=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        cd      
    - name: Show Commit Head and Combination Heads
      id: combHeader
      run: |
        echo "commitHash_op: ${{ steps.getHash.outputs.commitHash_op }}"    
    - name: Compare Commit Hash
      id: cacheHash
      uses: actions/cache@main
      with:
        path: .commitHash_op
        key: HEAD-${{ steps.getHash.outputs.commitHash_op }}
    - name: Save New Commit Hash
      if: steps.cacheHash.outputs.cache-hit != 'true'
      run: |
        echo ${{ steps.getHash.outputs.commitHash_op }} | tee .commitHash_op  
    - name: Telegram notification upload success
      if: steps.cacheHash.outputs.cache-hit != 'true'
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKENS }}
        message: |
          ‚ú®‡º∫OpenWrt‡ºª‚ú®
                ‚óè Ê∫êÁ†ÅÊõ¥Êñ∞‰∫Ü
          ‚ú™ ‚ú£ ‚ú§ ‚ú• ‚ú¶ ‚ùâ ‚ù¶ ‚ùß ‚ùÉ ‚ùÇ ‚ùÅ ‚ùÄ
          üìçÔºöhttps://github.com/openwrt/openwrt
# /////////////////////////////////////////////////////////////////////////////////////////////////////////
  Cleaning:
    needs: [Checka,Checkb,Checkc,Checkd,Checke,Checkf]    
    runs-on: ubuntu-latest
    steps: 
    - name: Delete workflow runs
      uses: Jejz168/delete-workflow-runs@main
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        retain_days: 30
        keep_minimum_runs: 8
